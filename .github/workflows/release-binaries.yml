name: Release (Windows)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-release:
    name: Build and release Windows .exe
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo and target
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build (release)
        run: cargo build --locked --release

      - name: Verify binaries exist
        shell: pwsh
        run: |
          Get-ChildItem -Path target/release -Filter *.exe

      - name: Compute release metadata
        id: meta
        shell: pwsh
        run: |
          $short = $env:GITHUB_SHA.Substring(0,7)
          "tag=auto-main-$short" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
          "name=Main build $short" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append

      - name: Create Release and Upload Assets (.exe)
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.meta.outputs.tag }}
          name: ${{ steps.meta.outputs.name }}
          target_commitish: ${{ github.sha }}
          files: |
            target/release/unchained.exe
            target/release/inspect_db.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


